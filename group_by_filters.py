group_by_filters = [
    {"column_name": "trend_pre", "description": "Pre-trend"},
    {"column_name": "event", "description": "Event"},
    {"column_name": "trend_post", "description": "Post-Trend"},
    {"column_name": "vt_start_pre", "description": "Pre-Trend Start (time of P1)"},
    {"column_name": "vt_end_pre", "description": "Pre-Trend End (time of P2)"},
    {"column_name": "vt", "description": "Event timestamp"},
    {"column_name": "vt_hour", "description": "Event Hour"},
    {"column_name": "vt_start_post", "description": "Post-Trend Start (time of P3)"},
    {"column_name": "vt_end_post", "description": "Post-Trend End (time of P4)"},
    {"column_name": "p1_value", "description": "Value of Parameter 1 (P1)"},
    {"column_name": "p2_value", "description": "Value of Parameter 2 (P2)"},
    {"column_name": "p3_value", "description": "Value of Parameter 3 (P3)"},
    {"column_name": "p4_value", "description": "Value of Parameter 4 (P4)"},
    {"column_name": "rows_pre", "description": "Number of rows before event"},
    {"column_name": "rows_post", "description": "Number of rows after event"},
    {"column_name": "slope_pre", "description": "Pre-Slope"},
    {"column_name": "slope_pre_normalized", "description": "Pre-Slope Normalized"},
    {"column_name": "slope_post", "description": "Post-Slope"},
    {"column_name": "duration_pre", "description": "Duration of trend before event"},
    {"column_name": "duration_post", "description": "Duration of trend after event"},
    {"column_name": "gap_pre", "description": "p2_value - p1_value (Gap before event)"},
    {"column_name": "gap_post", "description": "p4_value - p3_value (Gap after event)"},
    {"column_name": "deltax", "description": "Delta X"},
    {"column_name": "deltay", "description": "Delta Y"},
    {"column_name": "minnumberoftuples", "description": "Minimum Number of Tuples"},
    {"column_name": "maxdeltavt", "description": "Max Delta VT"},
    {"column_name": "maxdurationtime", "description": "Max Duration Time"},
    {"column_name": "maxdeltastart", "description": "Max Delta Start"},
    {"column_name": "max_steady_percentage", "description": "Max Steady Percentage"},
    {"column_name": "influenced_by_event", "description": "Influenced By Event"},
    {"column_name": "measure", "description": "Measure"},
    {"column_name": "icustay_id", "description": "ID of the ICU stay"}
]

filter_map = {item["column_name"]: item["description"] for item in group_by_filters}